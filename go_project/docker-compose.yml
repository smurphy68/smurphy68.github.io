version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - broker-net

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - broker-net

  # postgres:
  #   image: postgres:latest
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER} 
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   volumes:
  #     - ./users/init_user.sql:/docker-entrypoint-initdb.d/init_user.sql
  #   networks:
  #     - db-net

  broadcaster:
    build:
      context: .
      dockerfile: ./broadcaster/dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    networks:
      - db-net
      - broker-net

  listener:
    build:
      context: .
      dockerfile: ./listener/dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - kafka
      #- postgres
    networks:
      - db-net
      - broker-net

networks:
  broker-net:
  db-net:
